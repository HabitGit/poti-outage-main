import TelegramBot from "node-telegram-bot-api";
import {IGetUserPoints} from "../templates/interfaces";
import {Helper} from "../service/helper";
import {cacheClient} from "../db/data-source.redis";
import { ClientService } from '../service/client.service';

export class MainController {
    constructor(
        private clientService: ClientService,
        private helper: Helper,
        ) {}

    async requestHandler(msg: TelegramBot.Message, bot: TelegramBot) {
        const { chatId, userName, userId, message }: IGetUserPoints = await this.helper.getUserPoints(msg);

        switch (message) {

            case '/start':
                await this.clientService.CommandStart(chatId, userName || 'Anonymous', userId, bot)
                break;

            case '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è':
                if ( !userId ) return bot.sendMessage(chatId, '–° –≤–∞—à–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º —á—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫')
                await this.clientService.Registration(userId, chatId, bot)
                break;

            case '–ü–æ–∫–∞–∑–∞—Ç—å –∏–º–µ—é—â–∏–µ—Å—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è':
                const cacheWater: string | null = await cacheClient.get('waterInfo');
                const cacheElectricity: string | null = await cacheClient.get('electricityInfo');
                const result = {
                    water: cacheWater || '–ù–µ –ø–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –≤–æ–¥—ã.',
                    electricity: cacheElectricity || '–ù–µ –ø–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–≤–∞.',
                }
                await bot.sendMessage(chatId, result.water + '\n' + result.electricity);
                break;

            case '/sendMessageFromAdmin':
                const sendMessage: string = '–ë–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω –¥–ª—è –≤–Ω–µ—Å–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π: —Ç–µ–ø–µ—Ä—å –æ–Ω –º–æ–∂–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤—É. –ü–µ—Ä–≤—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –ø–æ—Å—Ç—É–ø—è—Ç –ø–æ—Å–ª–µ 2—Ö —á–∞—Å–æ–≤ –Ω–æ—á–∏, –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ì—Ä—É–∑–∏–∏.';
                await this.clientService.sendMessageFromAdmin(bot, sendMessage);
                break;

            case '–°—Å—ã–ª–∫–∏ –Ω–∞ —Å–∞–π—Ç—ã':
                const linksMessage: string = '–û—Ç–∫–ª—é—á–µ–Ω–∏—è –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏—èüö∞:\nhttp://water.gov.ge/page/full/107/\n–û—Ç–∫–ª—é—á–µ–Ω–∏—è —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–∞‚ö°Ô∏è:\nhttps://my.energo-pro.ge/ow/#/disconns\n–û—Ç–∫–ª—é—á–µ–Ω–∏—è –≥–∞–∑–∞‚õΩÔ∏è:\nhttps://mygas.ge/araf/outage';
                await bot.sendMessage(chatId, linksMessage);
                break;
        }
    }
}